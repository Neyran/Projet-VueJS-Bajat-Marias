{"remainingRequest":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\src\\components\\RestaurantMenu.vue?vue&type=template&id=4808fe6c&","dependencies":[{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\src\\components\\RestaurantMenu.vue","mtime":1578940881567},{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}