{"remainingRequest":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\src\\components\\RestaurantMenu.vue?vue&type=template&id=4808fe6c&scoped=true&","dependencies":[{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\src\\components\\RestaurantMenu.vue","mtime":1578951298994},{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\maxla\\Documents\\GitHub\\Projet-VueJS-Norman-Marias\\projetbuffa_modele_cli_router\\Client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}